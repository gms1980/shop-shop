{"ast":null,"code":"import _slicedToArray from\"/Users/George/Documents/shop-shop/shop-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import{useQuery}from'@apollo/react-hooks';import{useStoreContext}from'../../utils/GlobalState';import{UPDATE_CATEGORIES,UPDATE_CURRENT_CATEGORY}from'../../utils/actions';import{QUERY_CATEGORIES}from'../../utils/queries';function CategoryMenu(){var _useStoreContext=useStoreContext(),_useStoreContext2=_slicedToArray(_useStoreContext,2),state=_useStoreContext2[0],dispatch=_useStoreContext2[1];var categories=state.categories;var _useQuery=useQuery(QUERY_CATEGORIES),categoryData=_useQuery.data;useEffect(function(){if(categoryData){dispatch({type:UPDATE_CATEGORIES,categories:categoryData.categories});}},[categoryData,dispatch]);var handleClick=function handleClick(id){dispatch({type:UPDATE_CURRENT_CATEGORY,currentCategory:id});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Choose a Category:\"),categories.map(function(item){return/*#__PURE__*/React.createElement(\"button\",{key:item._id,onClick:function onClick(){handleClick(item._id);}},item.name);}));}export default CategoryMenu;","map":{"version":3,"sources":["/Users/George/Documents/shop-shop/shop-shop/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","useStoreContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","CategoryMenu","state","dispatch","categories","categoryData","data","type","handleClick","id","currentCategory","map","item","_id","name"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,iBAAT,CAA4BC,uBAA5B,KAA2D,qBAA3D,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CAEA,QAASC,CAAAA,YAAT,EAAwB,CACtB,qBAA0BJ,eAAe,EAAzC,sDAAOK,KAAP,sBAAcC,QAAd,sBAEA,GAAQC,CAAAA,UAAR,CAAuBF,KAAvB,CAAQE,UAAR,CAEA,cAA+BR,QAAQ,CAACI,gBAAD,CAAvC,CAAcK,YAAd,WAAQC,IAAR,CAEAX,SAAS,CAAC,UAAM,CACd,GAAIU,YAAJ,CAAkB,CAChBF,QAAQ,CAAC,CACPI,IAAI,CAAET,iBADC,CAEPM,UAAU,CAAEC,YAAY,CAACD,UAFlB,CAAD,CAAR,CAID,CACF,CAPQ,CAON,CAACC,YAAD,CAAeF,QAAf,CAPM,CAAT,CASA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,EAAE,CAAI,CACxBN,QAAQ,CAAC,CACPI,IAAI,CAAER,uBADC,CAEPW,eAAe,CAAED,EAFV,CAAD,CAAR,CAID,CALD,CAOA,mBACE,4CACE,mDADF,CAEGL,UAAU,CAACO,GAAX,CAAe,SAAAC,IAAI,qBAClB,8BACE,GAAG,CAAEA,IAAI,CAACC,GADZ,CAEE,OAAO,CAAE,kBAAM,CACbL,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX,CACD,CAJH,EAMGD,IAAI,CAACE,IANR,CADkB,EAAnB,CAFH,CADF,CAeD,CAED,cAAeb,CAAAA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n    }\n  }, [categoryData, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"]},"metadata":{},"sourceType":"module"}